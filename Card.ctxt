#BlueJ class context
comment0.target=Card
comment0.text=\n\ Card.java\n\n\ <code>Card</code>\ represents\ a\ basic\ playing\ card.\n
comment1.params=lsymbol\ lvalue
comment1.target=Card(java.lang.String,\ int)
comment1.text=\n\ Creates\ a\ new\ <code>Card</code>\ instance.\n\n\ @param\ symbol\ \ a\ <code>String</code>\ value\ representing\ the\ symbol\ of\ the\ card\n\ @param\ value\ an\ <code>int</code>\ value\ containing\ the\ point\ value\ of\ the\ card\n
comment2.params=
comment2.target=java.lang.String\ getSymbol()
comment2.text=\n\ Getter\ method\ to\ access\ this\ <code>Card</code>'s\ symbol.\n\ \n\ @return\ this\ <code>Card</code>'s\ symbol.\n
comment3.params=
comment3.target=int\ getValue()
comment3.text=\n\ Getter\ method\ to\ access\ the\ <code>Cars</card>'s\ value\n
comment4.params=
comment4.target=boolean\ isFaceUp()
comment4.text=\n\ returns\ weather\ or\ not\ <code>Card</code>\ is\ face\ up\ or\ not\n
comment5.params=state
comment5.target=void\ setFaceUp(boolean)
comment5.text=\n\ Sets\ the\ isFaceUp\ Sybmol\ to\ the\ current\ state\ of\ the\ <code>Card</code>\n\ \n\ True\ if\ up\ and\ false\ if\ down.\n
comment6.params=other
comment6.target=boolean\ equals(Card)
comment6.text=\n\ Returns\ whether\ or\ not\ this\ <code>Card</code>\ is\ equal\ to\ another\n\ \ \n\ \ @return\ whether\ or\ not\ this\ Card\ is\ equal\ to\ other.\n
comment7.params=other
comment7.target=int\ compareTo(Card)
comment7.text=\ \n\ Method\ which\ needs\ to\ be\ included\ for\ the\ Comparable\ interface\n\ \n\ This\ returns\ the\ difference\ between\ <code>Card</code>\ and\ another\ card\ passed\ in\ as\ a\ parameter\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ Returns\ this\ card\ as\ a\ String.\ \ If\ the\ card\ is\ face\ down,\ "X"\n\ is\ returned.\ \ Otherwise\ the\ symbol\ of\ the\ card\ is\ returned.\n\n\ @return\ a\ <code>String</code>\ containing\ the\ symbol\ or\ and\ X,\n\ depending\ on\ whether\ the\ card\ is\ face\ up\ or\ down.\n
numComments=9
